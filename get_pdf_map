#!/usr/bin/python

from wms_get_map import *
import argparse
import logging as log

def parse_arguments(parser):
    ####################
    # location
    ####################
    location_group = parser.add_argument_group("location")
    location_group.add_argument("x", type=str, help="x coordinate", nargs="?")
    location_group.add_argument("y", type=str, help="y coordinate", nargs="?")
    location_group.add_argument("-a", "--address", type=str, help="address to geocode. overrides coordinates")

    location_group.add_argument("-A", "--geo", type=str, help="geocoder system",
            default="google")
    location_group.add_argument("--wgs-84", action="store_true",
            help="x and y are WGS84 coordinates", default=False)
    location_group.add_argument("--tm35fin", action="store_true",
            help="x and y are ETRS-TM35FIN coordinates", default=True)
    location_group.add_argument("--kkj", action="store_true",
            help="x and y are KKJ coordinates", default=False)
    location_group.add_argument("--srs", type=str,
                help="SRS to use as input coordinate system", default="")

    #################
    # pdf
    ################
    pdf_group = parser.add_argument_group("pdf support")

    pdf_group.add_argument("--scale", type=int, help="scale(1 cm in map : n cm in ground",
            metavar="N", default=10000)

    pdf_group.add_argument("--size-output", type=str, help="output size(mm)",
            metavar="widthxheight", default="297x210")

    pdf_group.add_argument("-O", "--output", type=str, help="output file")

    #################
    # misc
    #################
    misc_group = parser.add_argument_group("misc")
    misc_group.add_argument("-v", "--verbose",
            help="increase output verbosity", action="count", default=0)
    misc_group.add_argument("--dryrun", action="count", default=0,
            help="do not download map")

    return parser.parse_args()

def main():
    parser = argparse.ArgumentParser()
    args = parse_arguments(parser)

    init_logger(args.verbose)

    log.debug(args)

    check_packages()
    check_arguments(args)

    if args.address != None and can_use_geocoder():
        wgs84_coordinates = get_coordinates(args.geo, args.address)
        tm35_coordinates = wgs84_to_tm35(wgs84_coordinates)
    elif args.address != None and not can_use_geocoder():
        log.error("Trying to use geocoder but geopy or pyproj is disabled")
        sys.exit()
    else:
        tm35_coordinates = use_given_coordinates(args)

    log.debug(args)

    if args.dryrun:
        log.error("Dryrun. Exiting...")
        sys.exit()

    pdf_file = fetch_pdf(tm35_coordinates, args.size_output, args.scale)
    with open(args.output, "wb") as fh:
        fh.write(pdf_file)

if __name__ == "__main__":
    main()

